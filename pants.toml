[GLOBAL]
pants_version = "2.14.1"
colors = true

backend_packages = [
  "pants.backend.shell",
  "pants.backend.docker",
  "pants.backend.python",
  "pants.backend.build_files.fmt.black",
  "pants.backend.experimental.python.lint.pyupgrade",
  "pants.backend.experimental.python.lint.autoflake",

#  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.bandit",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.isort",
  "pants.backend.python.typecheck.mypy"
]
pants_ignore.add = ["**/migrations/*"]


[anonymous-telemetry]
enabled = false

[source]
root_patterns = ["/"]

[tailor]
ignore_adding_targets = ['django:manage']

[python]
interpreter_constraints = ["==3.10.*"]
enable_resolves = true
resolves = { python-default = "build-support/python-default.lock" }

[python-infer]
string_imports = true

[repl]
shell = "ipython"

[ipython]
version = "ipython==7.23.1"
lockfile = "build-support/ipython.lockfile"

################################################################################
# Unit tests
################################################################################
[test]
extra_env_vars = [
  "DJANGO_SETTINGS_MODULE=config.settings",
  "DJANGO_ENV=local"
]

[pytest]
lockfile = "build-support/pytest.lockfile"
args = [
    "-ra -q -vv --no-header",
    "--reuse-db",
    "--no-migrations",
]
extra_requirements = [
    "pytest-django",
    "pytest-cov",
    "pytest-env",
    "pytest-sugar",
    "pytest-xdist",
]
execution_slot_var = "PANTS_EXECUTION_SLOT"

################################################################################
# Type checkers
################################################################################
[mypy]
version = "mypy==0.961"
lockfile = "build-support/mypy.lockfile"
args = [
  "--non-interactive",
  "--install-types",
  "--config-file=pyproject.toml"
]
extra_requirements = [
  "phonenumbers",
  "django-stubs==1.8.0",
  "djangorestframework-stubs[compatible-mypy]==1.4.0"
]
config = "pyproject.toml"

################################################################################
# Formatters
################################################################################
[black]
version = "black==22.12.0"
lockfile = "build-support/black.lockfile"
config = "pyproject.toml"

[autoflake]
version = "autoflake==2.0.0"
lockfile = "build-support/autoflake.lockfile"
args = [
    "--in-place",
    "--ignore-init-module-imports",
    "--remove-all-unused-imports",
    "--expand-star-imports",
    "--remove-duplicate-keys",
    "--remove-unused-variables",
]

[pyupgrade]
version = "pyupgrade==3.3.1"
lockfile = "build-support/pyupgrade.lockfile"
args = ["--py310-plus"]

################################################################################
# Lint
################################################################################
[bandit]
version = "bandit[toml]==1.7.4"
lockfile = "build-support/bandit.lockfile"
args = [
  "-iii", "-ll", "-c", "pyproject.toml"
]
config = "pyproject.toml"

[flake8]
version = "flake8>=6.0.0,<7"
lockfile = "build-support/flake8.lockfile"
extra_requirements = [
    "setuptools",
    "flake8-isort",
    "flake8-bugbear",
    "flake8-comprehensions",
    "flake8-mutable",
    "flake8-print",
    "flake8-simplify",
]

[isort]
version = "isort==5.8.0"
lockfile = "build-support/isort.lockfile"
args = ["-v", "--profile=black" ]
config = "pyproject.toml"
